1 数据驱动本身时自动化测试领域下非常常见的一种设计形态
    所有的测试数据都是要单独存放与管理的
    数据与代码分离的结构。
    不同的数据驱动形态是有不同的作用的，对于测试框架设计而言，选择配对的数据驱动形态是非常核心的环节
    一般而言常态化的数据驱动是基于：
        Excel数据驱动：
                实现简单，容易上手。但是数据较为死板，管理相对麻烦。
            容易上手，不需要任何编程经验，适用于整体技术能力偏弱的测试团队。
            用例的冗余相对较高，但是因为使用成本很低，可以接受，在内容的维护和管理上相对难一点
        Yaml数据驱动：
                数据直观，可灵活优化，方便管理，但实现对于技术要求更高
            数据管理灵活方便，直观展示
             常规的测试过程中很少见到yaml格式的文件，一般都是用来做配置文件以及测试数据管理的文件。
             有非常简洁，且灵活的展示形态。可以非常简便的支持各种复杂的数据类型
             操作yaml文件的库是 pyyaml
             pip install pyyaml

             格式规范：
             - 表示列表数据
             : 表示dict数据类型

        json
        py
        txt、csv、xml...

            团队技术
            项目需求
            实现者能力

yaml的数据驱动形态下的测试执行：
    推荐使用ddt+unittest+yaml的形态来完成
    同样适用yaml+pytest也可以实现（需要自己封装yaml的读取函数）
    一个测试用例使用一个yaml文件

